<template>
  <div>
    <canvas id="canvas"></canvas>
    <text> {{text}} -- {{say}}</text>

  </div>
</template>

<script>
  export default {
    props: ['text'],
    data: {
      say: 'hello',
      obj: {
        name: 'quickApp'
      }
    },
    onInit(){
      console.log(123213)
    },
    onReady(){
      console.log(12321)
            this.drawCanvas()
      this.say = 're'
    },
    onShow(){
      console.info(123)
      this.drawCanvas()
      this.say = 're'
    },
    drawCanvas() {
      const canvas = this.$element('canvas')      
      const ctx = canvas.getContext('2d')

      const width = 200;
      const height = 100;

      // console.log(ctx,width,height)
      ctx.translate(width / 2, height / 2); // 将画布原点移动到中心位置
      ctx.rotate(-Math.PI); // 旋转-180°

      let circleObj = {
          ctx: ctx,
          /*圆心*/
          x: 0,
          y: 0,
          /*半径*/
          radius: height / 2 - 10,//半径比canvas宽的一半要小
      };

      let backCircle = {
        ...circleObj,
        startAngle: 0,
        endAngle  : Math.PI,
        color     : '#e9e9e9',
        lineWidth: 5
      }
      // this.drawCircle(backCircle); 

      // return
      let percent = 0.9
      let percentStep = 0.08
      let targetAngle = Math.PI * percent
      let color

      if(percent <= 0.5){
        color  = '#dd6200'
      }else if(percent <= 0.7){
        color  = 'yellow'
      }else{
        color  = 'green'
      }

      let frontCircle = {
        ...circleObj,
        startAngle: 0,
        endAngle  : 0,
        color     : color,
        lineWidth : 7
      }
      // this.drawCircle(frontCircle)
      let self = this
      console.log(1)
      let ti = setInterval(()=>{
          frontCircle.endAngle += percentStep
          // if (frontCircle.endAngle >= targetAngle) {
          //     clearInterval(ti)
          // }
          ctx.clearRect(0, 0, width, height);
          self.drawCircle(backCircle);
          self.drawCircle(frontCircle)
          console.log(1)
      },300)

    },
    drawCircle(circleObj) {
      let ctx = circleObj.ctx;
      ctx.beginPath();
      ctx.arc(circleObj.x, circleObj.y, circleObj.radius, circleObj.startAngle, circleObj.endAngle, false);
      //设定曲线粗细度
      ctx.lineWidth = circleObj.lineWidth;
      //给曲线着色
      ctx.strokeStyle = circleObj.color;
      //连接处样式
      ctx.lineCap = 'round';
      //给环着色
      ctx.stroke();
      ctx.closePath();
    }


  }
</script>

<style>
  canvas {
  height: 100px;
  width: 200px;
  /*background-color:yellow; */
  /*border: 1px gray dashed;*/
  }
</style>
